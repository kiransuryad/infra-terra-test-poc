trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace
  GOBIN:  '$(GOPATH)/bin'                            # Go bin directory
  modulePath: '$(GOPATH)/src/github.com/yourname/yourrepo' # Replace with your module path

stages:
- stage: TestTerraform
  jobs:
  - job: RunTerratest
    steps:
    - powershell: |
        # Install Go
        $goUrl = "https://dl.google.com/go/go1.17.1.windows-amd64.msi"
        $output = "go_installer.msi"
        Invoke-WebRequest -Uri $goUrl -OutFile $output
        Start-Process $output -Wait

        # Install Terraform
        $terraformUrl = "https://releases.hashicorp.com/terraform/1.0.7/terraform_1.0.7_windows_amd64.zip"
        $terraformZip = "terraform.zip"
        Invoke-WebRequest -Uri $terraformUrl -OutFile $terraformZip
        Expand-Archive -Path $terraformZip -DestinationPath C:\tools
        Add-Content -Value "`nC:\tools" -Path $env:GITHUB_PATH -NoNewline
      displayName: 'Install Go and Terraform using PowerShell'

    - script: |
        mkdir -p '$(GOBIN)'
        mkdir -p '$(modulePath)'
        echo '##vso[task.prependpath]$(GOBIN)'
        echo '##vso[task.prependpath]$(GOROOT)/bin'
      displayName: 'Set up the Go workspace'

    - checkout: self
      path: '$(modulePath)'

    - script: |
        go version
        go env
      workingDirectory: $(modulePath)/tests
      displayName: 'Verify Go Installation'

    - script: |
        go get -v -t -d ./...
        if [ $? -ne 0 ]; then
          exit 1
        fi
      workingDirectory: $(modulePath)/tests
      displayName: 'Get dependencies, using go get'

    - script: |
        go test -v -timeout 30m
      workingDirectory: $(modulePath)/tests
      displayName: 'Run Terratest'
